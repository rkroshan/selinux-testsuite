#
######### Test filesystem permissions policy module ##########
#
attribute filesystemdomain;
kernel_setsched(filesystemdomain)

#################### Create test file contexts ######################
type test_filesystem_filecon_t;
unconfined_runs_test(test_filesystem_filecon_t)

# type transition context:
type test_filesystem_filetranscon_t;
unconfined_runs_test(test_filesystem_filetranscon_t)

# Name-based type transition context:
type test_filesystem_filenametranscon1_t;
unconfined_runs_test(test_filesystem_filenametranscon1_t)
type test_filesystem_filenametranscon2_t;
unconfined_runs_test(test_filesystem_filenametranscon2_t)

################# Test all functions ##########################
type test_filesystem_t;
domain_type(test_filesystem_t)
unconfined_runs_test(test_filesystem_t)
typeattribute test_filesystem_t testdomain;
typeattribute test_filesystem_t filesystemdomain;

allow test_filesystem_t self:capability { sys_admin };
allow test_filesystem_t self:filesystem { mount remount quotamod relabelfrom relabelto unmount quotaget };
allow test_filesystem_t self:dir { mounton add_name write };
allow test_filesystem_t test_file_t:dir { mounton write remove_name rmdir };
# Create test file
allow test_filesystem_t self:dir { add_name write };
allow test_filesystem_t self:file { create relabelfrom relabelto };

fs_mount_all_fs(test_filesystem_t)
fs_remount_all_fs(test_filesystem_t)
fs_unmount_all_fs(test_filesystem_t)
fs_relabelfrom_all_fs(test_filesystem_t)
fs_get_xattr_fs_quotas(test_filesystem_t)
files_search_all(test_filesystem_t)
# Required for mount opts "rootcontext=system_u:object_r:test_filesystem_t:s0";
fs_associate(test_filesystem_t)
fs_getattr_xattr_fs(test_filesystem_t)

# For running quotacheck(8)
files_type(test_filesystem_t)
# Update quotas
fs_set_all_quotas(test_filesystem_t)
allow test_filesystem_t self:file { quotaon };

# Create file and change context via setfilecon(3):
fs_associate(test_filesystem_filecon_t)
allow test_filesystem_t test_filesystem_filecon_t:file { open read getattr relabelto write };

# Create file and change context via type_transition rule:
fs_associate(test_filesystem_filetranscon_t)
type_transition test_filesystem_t test_filesystem_t:file test_filesystem_filetranscon_t;
allow test_filesystem_t test_filesystem_filetranscon_t:file { create getattr open write relabelfrom };
dontaudit unconfined_t test_filesystem_filetranscon_t:file { getattr read };

# Create file and change context via name-based type_transition rule:
fs_associate(test_filesystem_filenametranscon1_t)
type_transition test_filesystem_t test_filesystem_t:file test_filesystem_filenametranscon1_t "name_trans_test_file1";
allow test_filesystem_t test_filesystem_filenametranscon1_t:file { create getattr open write };
dontaudit unconfined_t test_filesystem_filenametranscon1_t:file { getattr read };
#
fs_associate(test_filesystem_filenametranscon2_t)
type_transition test_filesystem_t test_filesystem_t:file test_filesystem_filenametranscon2_t "name_trans_test_file2";
allow test_filesystem_t test_filesystem_filenametranscon2_t:file { create getattr open write };
dontaudit unconfined_t test_filesystem_filenametranscon2_t:file { getattr read };

#################### Deny filesystem { getattr } ######################
type test_filesystem_no_getattr_t;
domain_type(test_filesystem_no_getattr_t)
unconfined_runs_test(test_filesystem_no_getattr_t)
typeattribute test_filesystem_no_getattr_t testdomain;
typeattribute test_filesystem_no_getattr_t filesystemdomain;

allow test_filesystem_no_getattr_t self:capability { sys_admin };
fs_mount_all_fs(test_filesystem_no_getattr_t)
fs_unmount_all_fs(test_filesystem_no_getattr_t)
fs_relabelfrom_all_fs(test_filesystem_no_getattr_t)
fs_associate(test_filesystem_no_getattr_t)
allow test_filesystem_no_getattr_t self:dir { mounton };
allow test_filesystem_no_getattr_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny filesystem { remount } ######################
type test_filesystem_no_remount_t;
domain_type(test_filesystem_no_remount_t)
unconfined_runs_test(test_filesystem_no_remount_t)
typeattribute test_filesystem_no_remount_t testdomain;
typeattribute test_filesystem_no_remount_t filesystemdomain;

allow test_filesystem_no_remount_t self:capability { sys_admin };
fs_mount_all_fs(test_filesystem_no_remount_t)
fs_unmount_all_fs(test_filesystem_no_remount_t)
fs_relabelfrom_all_fs(test_filesystem_no_remount_t)
fs_associate(test_filesystem_no_remount_t)
allow test_filesystem_no_remount_t self:dir { mounton };
allow test_filesystem_no_remount_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny filesystem { mount } ######################
type test_filesystem_no_mount_t;
domain_type(test_filesystem_no_mount_t)
unconfined_runs_test(test_filesystem_no_mount_t)
typeattribute test_filesystem_no_mount_t testdomain;
typeattribute test_filesystem_no_mount_t filesystemdomain;

allow test_filesystem_no_mount_t self:capability { sys_admin };
fs_relabelfrom_all_fs(test_filesystem_no_mount_t)
fs_associate(test_filesystem_no_mount_t)
allow test_filesystem_no_mount_t self:dir { mounton };
allow test_filesystem_no_mount_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny filesystem { unmount } ######################
type test_filesystem_no_unmount_t;
domain_type(test_filesystem_no_unmount_t)
unconfined_runs_test(test_filesystem_no_unmount_t)
typeattribute test_filesystem_no_unmount_t testdomain;
typeattribute test_filesystem_no_unmount_t filesystemdomain;

allow test_filesystem_no_unmount_t self:capability { sys_admin };
fs_mount_all_fs(test_filesystem_no_unmount_t)
fs_relabelfrom_all_fs(test_filesystem_no_unmount_t)
fs_associate(test_filesystem_no_unmount_t)
allow test_filesystem_no_unmount_t self:dir { mounton };
allow test_filesystem_no_unmount_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny filesystem { relabelfrom } ######################
type test_filesystem_no_relabelfrom_t;
domain_type(test_filesystem_no_relabelfrom_t)
unconfined_runs_test(test_filesystem_no_relabelfrom_t)
typeattribute test_filesystem_no_relabelfrom_t testdomain;
typeattribute test_filesystem_no_relabelfrom_t filesystemdomain;

allow test_filesystem_no_relabelfrom_t self:capability { sys_admin };
fs_associate(test_filesystem_no_relabelfrom_t)
allow test_filesystem_no_relabelfrom_t self:dir { mounton };
allow test_filesystem_no_relabelfrom_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny filesystem { relabelto } ######################
type test_filesystem_no_relabelto_t;
domain_type(test_filesystem_no_relabelto_t)
unconfined_runs_test(test_filesystem_no_relabelto_t)
typeattribute test_filesystem_no_relabelto_t testdomain;
typeattribute test_filesystem_no_relabelto_t filesystemdomain;

allow test_filesystem_no_relabelto_t self:capability { sys_admin };
fs_mount_all_fs(test_filesystem_no_relabelto_t)
fs_relabelfrom_all_fs(test_filesystem_no_relabelto_t)
fs_associate(test_filesystem_no_relabelto_t)
allow test_filesystem_no_relabelto_t self:dir { mounton };
allow test_filesystem_no_relabelto_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny filesystem { associate } ######################
type test_filesystem_no_associate_t;
type test_filesystem_no_associate1_t;
domain_type(test_filesystem_no_associate_t)
unconfined_runs_test(test_filesystem_no_associate_t)
typeattribute test_filesystem_no_associate_t testdomain;
typeattribute test_filesystem_no_associate_t filesystemdomain;

allow test_filesystem_no_associate_t self:capability { sys_admin };
allow test_filesystem_no_associate_t self:filesystem { relabelto mount relabelfrom };
fs_mount_all_fs(test_filesystem_no_associate_t)
fs_relabelfrom_all_fs(test_filesystem_no_associate_t)
allow test_filesystem_no_associate_t self:dir { mounton };
allow test_filesystem_no_associate_t test_file_t:dir { mounton write remove_name rmdir };

########## Deny filesystem { associate } for create file ################
type test_filesystem_no_associate_file_t;
domain_type(test_filesystem_no_associate_file_t)
unconfined_runs_test(test_filesystem_no_associate_file_t)
typeattribute test_filesystem_no_associate_file_t testdomain;
typeattribute test_filesystem_no_associate_file_t filesystemdomain;

allow test_filesystem_no_associate_file_t self:capability { sys_admin };
allow test_filesystem_no_associate_file_t self:filesystem { mount relabelfrom relabelto unmount associate };
allow test_filesystem_no_associate_file_t self:dir { mounton add_name write };
allow test_filesystem_no_associate_file_t test_file_t:dir { mounton write remove_name rmdir };

fs_mount_all_fs(test_filesystem_no_associate_file_t)
fs_unmount_all_fs(test_filesystem_no_associate_file_t)
fs_relabelfrom_all_fs(test_filesystem_no_associate_file_t)
fs_associate(test_filesystem_no_associate_file_t)
fs_getattr_xattr_fs(test_filesystem_no_associate_file_t)

# Create test file
allow test_filesystem_no_associate_file_t self:file { create relabelfrom relabelto };
############ hooks.c may_create() FILESYSTEM__ASSOCIATE #############
# FOR: neverallow unlabeled_t test_filesystem_no_associate_file_t:filesystem { associate };
allow test_filesystem_no_associate_file_t unconfined_t:file { open read write };
allow test_filesystem_no_associate_file_t unlabeled_t:dir { add_name search write };
allow test_filesystem_no_associate_file_t unlabeled_t:file { create open relabelfrom write };
############ hooks.c selinux_inode_setxattr() FILESYSTEM__ASSOCIATE ##########
# FOR: neverallow unconfined_t test_filesystem_no_associate_file_t:filesystem { associate };
dontaudit unconfined_t test_filesystem_filecon_t:file { getattr read };
allow test_filesystem_no_associate_file_t unconfined_t:dir { add_name write };
allow test_filesystem_no_associate_file_t unconfined_t:file { create relabelfrom relabelto };

#################### Deny filesystem { quotamod } ######################
type test_filesystem_no_quotamod_t;
domain_type(test_filesystem_no_quotamod_t)
unconfined_runs_test(test_filesystem_no_quotamod_t)
typeattribute test_filesystem_no_quotamod_t testdomain;
typeattribute test_filesystem_no_quotamod_t filesystemdomain;

allow test_filesystem_no_quotamod_t self:capability { sys_admin };
allow test_filesystem_no_quotamod_t self:filesystem { quotaget relabelto mount unmount};
fs_mount_all_fs(test_filesystem_no_quotamod_t)
fs_relabelfrom_all_fs(test_filesystem_no_quotamod_t)
fs_associate(test_filesystem_no_quotamod_t)
# Required as $private_path to quota files
files_search_all(test_filesystem_no_quotamod_t)
allow test_filesystem_no_quotamod_t self:dir { mounton };
allow test_filesystem_no_quotamod_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny filesystem { quotaget } ######################
type test_filesystem_no_quotaget_t;
domain_type(test_filesystem_no_quotaget_t)
unconfined_runs_test(test_filesystem_no_quotaget_t)
typeattribute test_filesystem_no_quotaget_t testdomain;
typeattribute test_filesystem_no_quotaget_t filesystemdomain;

allow test_filesystem_no_quotaget_t self:capability { sys_admin };
allow test_filesystem_no_quotaget_t self:filesystem { quotamod relabelto mount unmount relabelfrom };
allow test_filesystem_no_quotaget_t self:dir { mounton };
allow test_filesystem_no_quotaget_t test_file_t:dir { mounton write remove_name rmdir };
allow test_filesystem_no_quotaget_t self:file { quotaon };
fs_mount_all_fs(test_filesystem_no_quotaget_t)
fs_relabelfrom_all_fs(test_filesystem_no_quotaget_t)
fs_associate(test_filesystem_no_quotaget_t)
# Required as $private_path to quota files
files_search_all(test_filesystem_no_quotaget_t)
# For running quotacheck(8)
files_type(test_filesystem_no_quotaget_t)

#################### Deny file { quotaon } ######################
type test_file_no_quotaon_t;
domain_type(test_file_no_quotaon_t)
unconfined_runs_test(test_file_no_quotaon_t)
typeattribute test_file_no_quotaon_t testdomain;
typeattribute test_file_no_quotaon_t filesystemdomain;

allow test_file_no_quotaon_t self:capability { sys_admin };
allow test_file_no_quotaon_t self:filesystem { quotamod relabelto mount unmount relabelfrom };
allow test_file_no_quotaon_t self:dir { mounton };
allow test_file_no_quotaon_t test_file_t:dir { mounton write remove_name rmdir };
##allow test_file_no_quotaon_t self:file { quotaon };
fs_mount_all_fs(test_file_no_quotaon_t)
fs_relabelfrom_all_fs(test_file_no_quotaon_t)
fs_associate(test_file_no_quotaon_t)
# Required as $private_path to quota files
files_search_all(test_file_no_quotaon_t)
# For running quotacheck(8)
files_type(test_file_no_quotaon_t)

#################### Deny filesystem { watch } ######################
type test_filesystem_no_watch_t;
domain_type(test_filesystem_no_watch_t)
unconfined_runs_test(test_filesystem_no_watch_t)
typeattribute test_filesystem_no_watch_t testdomain;
typeattribute test_filesystem_no_watch_t filesystemdomain;

allow test_filesystem_no_watch_t self:capability { sys_admin };
allow test_filesystem_no_watch_t self:filesystem { associate relabelto mount unmount relabelfrom };
allow test_filesystem_no_watch_t self:dir { mounton };
allow test_filesystem_no_watch_t test_file_t:dir { mounton write remove_name rmdir };
fs_mount_all_fs(test_filesystem_no_watch_t)
fs_relabelfrom_all_fs(test_filesystem_no_watch_t)
fs_associate(test_filesystem_no_watch_t)

################# Test process { setfscreate } #############
type test_setfscreatecon_t;
domain_type(test_setfscreatecon_t)
unconfined_runs_test(test_setfscreatecon_t)
typeattribute test_setfscreatecon_t testdomain;
typeattribute test_setfscreatecon_t filesystemdomain;

allow test_setfscreatecon_t self:capability { sys_admin };
allow test_setfscreatecon_t self:process { setfscreate };
allow test_setfscreatecon_t test_file_t:dir { add_name write remove_name };

# Set new context on fs:
type test_setfscreatecon_newcon_t;
unconfined_runs_test(test_setfscreatecon_newcon_t)
fs_associate(test_setfscreatecon_newcon_t)
allow test_setfscreatecon_t test_setfscreatecon_newcon_t:dir { create getattr rmdir };

################# deny process { setfscreate } #############
type test_no_setfscreatecon_t;
domain_type(test_no_setfscreatecon_t)
unconfined_runs_test(test_no_setfscreatecon_t)
typeattribute test_no_setfscreatecon_t testdomain;
typeattribute test_no_setfscreatecon_t filesystemdomain;

allow test_no_setfscreatecon_t self:capability { sys_admin };
# neverallow test_no_setfscreatecon_t self:process { setfscreate };

################# Test fscontext= ##########################
type test_filesystem_fscontext_t;
domain_type(test_filesystem_fscontext_t)
unconfined_runs_test(test_filesystem_fscontext_t)
typeattribute test_filesystem_fscontext_t testdomain;
typeattribute test_filesystem_fscontext_t filesystemdomain;

allow test_filesystem_fscontext_t self:capability { sys_admin };
allow test_filesystem_fscontext_t self:filesystem { associate mount relabelfrom relabelto unmount };
allow test_filesystem_fscontext_t self:dir { mounton add_name write };
allow test_filesystem_fscontext_t test_file_t:dir { mounton write remove_name rmdir };
# Create test file
allow test_filesystem_fscontext_t self:dir { add_name write };
allow test_filesystem_fscontext_t self:file { create relabelfrom relabelto };
allow test_filesystem_fscontext_t test_filesystem_filecon_t:file { relabelto };
allow test_filesystem_filecon_t test_filesystem_fscontext_t:filesystem { associate };
allow test_filesystem_fscontext_t test_filesystem_filecon_t:file { open getattr read write };

fs_mount_all_fs(test_filesystem_fscontext_t)
fs_unmount_all_fs(test_filesystem_fscontext_t)
fs_relabelfrom_all_fs(test_filesystem_fscontext_t)
files_search_all(test_filesystem_fscontext_t)

########### Test context=, rootcontext= and defcontext #################
type test_filesystem_context_t;
domain_type(test_filesystem_context_t)
unconfined_runs_test(test_filesystem_context_t)
typeattribute test_filesystem_context_t testdomain;
typeattribute test_filesystem_context_t filesystemdomain;

allow test_filesystem_context_t self:capability { sys_admin };
allow test_filesystem_context_t self:filesystem { associate mount relabelfrom relabelto unmount };
allow test_filesystem_context_t self:dir { mounton add_name write };
allow test_filesystem_context_t test_file_t:dir { mounton write remove_name rmdir };
# Create test file
allow test_filesystem_context_t self:dir { add_name write };
allow test_filesystem_context_t self:file { create relabelfrom relabelto };
allow test_filesystem_context_t test_filesystem_filecon_t:file { open getattr read write relabelto };
allow test_filesystem_filecon_t test_filesystem_context_t:filesystem { associate };

fs_mount_all_fs(test_filesystem_context_t)
fs_unmount_all_fs(test_filesystem_context_t)
fs_relabelfrom_all_fs(test_filesystem_context_t)
files_search_all(test_filesystem_context_t)
fs_associate(test_filesystem_context_t)
allow test_filesystem_context_t test_file_t:dir { add_name };

# For testing rootcontext= Set mountpoint to unlabeled first
allow test_filesystem_context_t test_file_t:dir { relabelfrom };
allow test_filesystem_context_t unlabeled_t:dir { mounton relabelto };

# For testing defcontext=
allow test_filesystem_context_t test_filesystem_filecon_t:dir { search };
allow test_filesystem_fscontext_t test_filesystem_context_t:dir { add_name search write };
allow test_filesystem_fscontext_t test_filesystem_context_t:file { create getattr open write };
dontaudit unconfined_t test_filesystem_filecon_t:dir { read search };

#
########### Allow these domains to be entered from sysadm domain ############
#
miscfiles_domain_entry_test_files(filesystemdomain)
userdom_sysadm_entry_spec_domtrans_to(filesystemdomain)
